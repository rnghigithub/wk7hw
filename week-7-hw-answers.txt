1. 
 - introduced by Apple
 - used for the Mac OS X Webkit component in 2004.

2.  
- It is the canvas tag/element used in HTML5 that is used to draw graphics via JavaScript. However, the canvas 
element only contains the graphic, so JavaScript must be used to draw such. 

3. 
 - It can be as simple as <canvas></canvas>

4. 
- width and height attributes 

5. 
- the default canvas size is 300w x 150h 

6. If no width or height attribute is added to the canvas element in index.html, and no background, width, or height properties within the canvas
 element/id in the external stylesheet, or width or height in the JavaScript file, will anything render to the page?
- 

7. If the width and height are set in ctx.fillRect() only, and the width and height were set to greater than 300x x 150h, like 600w x 400h, for 
example, what width and height of canvas would render to the page?
-


8. 
 - A context would need to be created in order to gain access to the actual drawing interface. A context is an object whose methods
 provide the drawing interface. 

9. 
- 2d for 2 dimensional graphics
- webgl for 3 dimensional graphics 


10. How can we access our drawing context once we have retrieved our canvas element by id? Which built-in HTML5 canvas method does that for us 
and what is it set on? Give me the variable name and the value it is assigned.
-


11.
= primitive shapes: rectangles
- paths.paths


12. How are all other shapes (other than the primitive rectangle or path) created in canvas? And what kind of functions help us create complex shapes?
-


13. 
- fillRect() - fillRect(x, y, width, height)
  x- the x-axis coordinate of the upper left corner of rectangle
  y- the y-axis of the upper left corner of rectangle
  width: rectangle's width. positive values on the right. negative values on the left
  height: rectangle's height. positive values are down. negative values are down

- strokeRect() - ctx.strokeRect(x, y,width,height)
  x- the x-axis coordinate rectangle start point. 
  y- the y-axis  coordinate rectangle start point. 
  width: rectangle's width. positive values on the right. negative values on the left
  height: rectangle's height. positive values are down. negative values are up

- clearRect() - ctx.clearRect(x, y,width,height)
  x- the x-axis coordinate rectangle start point. 
  y- the y-axis  coordinate rectangle start point. 
  width: rectangle's width. positive values on the right. negative values on the left
  height: rectangle's height. positive values are down. negative values are up


14.
- a list of points connected by segments of lines that can be various shapes. They can be curved with different widths and colors. 

15.
- Draw a path
- Use drawing commands to draw into the path
- Once path is created, via stroke() or fill () to render the path.   